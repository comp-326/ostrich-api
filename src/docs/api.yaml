---
swagger: "2.0"
basePath: /v1
schemes:
  - http
  - https
info:
  title: "Ostrich API"
  version: "1.0.0"
  contact:
    name: Ostrich Ventures
    email: contact@example.com
    url: https://example.com/
tags:
  - name: Auth
    description: User authentication
  - name: Takeout
    description: Admin only created feeds
  - name: Folder
    description: User based folders
  - name: User
    description: User entity
  - name: Admin
    description: Define user with admin roles
  - name: Workspace
    description: Define the entities users are entitled to on account creation

paths:
  /auth/register:
    post:
      tags:
        - Auth
      description: Create ne user entity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            example:
              email: janedoe@gmail.com
              firstName: Jane
              lastName: Doe
              password: pass1Foeme@me
              confirmPassword: pass1Foeme@me
      responses:
        "200":
          description: OK
        "405":
          description: Invalid User input

  /auth/login:
    post:
      tags:
        - Auth
      description: Login a user already signed up
      parameters:
        - name: body
          in: body
          schema:
            exclusiveMaximum: false
            exclusiveMinimum: false
            uniqueItems: false
            readOnly: false
            example:
              email: janeDoe@gmail.com
              password: password
      responses:
        "200":
          description: OK login successful
          examples:
            firstName: Jane,
            lastName: Doe,
            email: janedoe@gmail.com,
            _id: 61ba073a96c173a881bf2034,
            __v: 0

        "404":
          description: Not found
        "405":
          description: Invalid User input
        "401":
          description: Not authenticated
        "403":
          description: Not authorized

  /auth/account/get/confirmation/link:
    post:
      tags:
        - Auth
      description: A route for sending account email confirmation to activate user account
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
            example:
              email: janedoeEgmail.com
      responses:
        "200":
          description: Account confirmation link sent

  /auth/account/confirm/{token}:
    get:
      tags:
        - Auth
      description: Confirm email confirmation link from the email
      parameters:
        - in: path
          name: token
          type: string
          required: true

      responses:
        "200":
          description: Successful account activation

  /admin/users/all/:
    get:
      description: Get all users only if user is admin
      tags:
        - Admin
      parameters:
        - name: authorization
          required: true
          in: header
          description: Authorization token header (Bearer Header)
          type: string

      responses:
        "200":
          description: OK
        "404":
          description: Not found
